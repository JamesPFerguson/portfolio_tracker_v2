exit
exut
URI("haha" + "hehe")
stock["companyName"]
stock["beta"]
stock[:companyName]
stock.companyName
stock = JSON.parse(response)
JSON.parse(response)
JSON.parse(reponse)
response = Net::HTTP.get(uri)
uri = URI(full)
full = url + "/" + ticker + "/stats"
full = uri + "/" + ticker + "/stats"
response = Net::HTTP.get(uri)
uri = URI(url)
url = "https://api.iextrading.com/1.0/stock"
exit
@portfolio_stocks
exit
!@user
@user
exit
!!@user
!@user
exit
@user
exit
@user
2user
exit
@user.save
@user
exit
@user
exit
@user
auth[:uid]
auth[:info]
auth
auth[:info][:login]
exit
@user
exit
session[:user_id]
session
exit
auth
exit
x.stock
x.portfolio_id
x = @portfolio_stocks.first
x = @portfolio_stocks.first[0]
@portfolio_stocks.first
exit
params
exit
PortfolioStock.all.first.stock
PortfolioStock.all
PortofolioStock.all
@portfolio_stock.stock
@portfolio_stock
exit
params[:portfolio_stock][:ticker]
params
exit
Stock.all
exit
params
stock
exit
Stock.all
Stock.all.clear
Stock.all.destroy
Stock.all
exit
session[:user_id]
sesssion[:user_id]
session
signed_in?
exit
stock
@portfolio_stock
exit
params
exit
stock.ticker
exit
@portfolio_stock
portfolio_stock_params[:quantity]
portfolio_stock_params
exit
@portfolio_stock.save
@portfolio_stock
exit
@portfolio_stocks
exit
stock
exit
where("pe_ratio > 0").order("pe_ratio asc").first
Scraper.scrape_ticker("GME")
Scraper.scrape_ticker("ISRG")
where("pe_ratio > 0").order("pe_ratio asc").first
where("pe_ratio > 0").order("pe_ratio: asc").first
where("pe_ratio > 0").order("pe_ratio :asc").first
order("pe_ratio: asc")
order(pe_ratio :asc)
where("pe_ratio > 0")
where("pe_ratio > 0").order(pe_ratio :asc).first
exit
self.order(pe_ratio :asc).first
order(pe_ratio :asc).first
self
exit
flash
exit
@user
flash[:notice]
flash
exit
flash[:message]
flash[:notice]
flash
User.all
params
@user
exit
User.all
params
exit
@portfolio.user
@portfolio
exit
@portfolio.user
@portfolio
exit
@portfolio = Portfolio.find_by(id: params[:id])
params
exit
params
@portfolio
exit
portfolio
portfolio.user
exit
Stock.all
next
Stock.all
Scraper.scrape_ticker("NFLX")
Scraper.scrape_ticker("NFLX)
stock.valid?
stock
Stock.all
exit
stock
exit
stock.valid?
stock
exit
stock
stock.valid?
Stock.all
stock.save
stock
stock.pe_ratio
stock.pe_ratio = td.css(".snapshot-td2")[1].text.to_f
stock
td.css(".snapshot-td2")[1].text
td.css(".snapshot-td2")[1]
exit
stock
stock.name = marketwatch.css(".company__name").text
marketwatch.css(".company__name").text
exit
stock
stock.pe_ratio = cell.text.to_f
stock.pe_ratio = cell.text_to_f
stock
cell.text.to_f
cell.text
next
cell.text
exit
cell.text
i
next
cell.text
i
continue
cell.text
i
exit
params[:stock][:ticker]
params
exit
td.css(".snapshot-td2")[66].text
td.css(".snapshot-td2")[65].text
td.css(".snapshot-td2")[23].text
td.css(".snapshot-td2")[23]
td.css(".snapshot-table2")
td.css(".snapshot-table2")[23]
td.css(".snapshot-table2")[23].text
